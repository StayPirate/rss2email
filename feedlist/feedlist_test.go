package feedlist

import (
	"os"
	"strings"
	"testing"
)

// We now validate feeds when adding, so we need real feed urls
// Let's hope the bbc feed urls rarely change
var testFeed1 = "http://feeds.bbci.co.uk/news/rss.xml"
var testFeed2 = "http://feeds.bbci.co.uk/news/rss.xml?edition=uk"
var testFeed3 = "http://feeds.bbci.co.uk/news/rss.xml?edition=us"
var testFeed4 = "http://feeds.bbci.co.uk/news/rss.xml?edition=int"

// TestDummy ensures we can find a default directory
func TestDummy(t *testing.T) {

	obj := New("")

	if !strings.Contains(obj.filename, ".rss2email") {
		t.Fatalf("autogenerated filename doesn't have our expected substring")
	}
}

// TestEmpty ensures we can handle a missing file
func TestEmpty(t *testing.T) {

	obj := New("/path/does/not/exist")

	entries := obj.Entries()
	if len(entries) != 0 {
		t.Fatalf("Found error reading a missing file")
	}
}

// TestMissingHome ensures that we can find the home-directory
// of a user, even without the environment
func TestMissingHome(t *testing.T) {

	cur := os.Getenv("HOME")
	os.Setenv("HOME", "")

	obj := New("")

	if !strings.Contains(obj.filename, ".rss2email") {
		t.Fatalf("autogenerated filename doesn't have our expected substring")
	}

	// Reset
	os.Setenv("HOME", cur)
}
